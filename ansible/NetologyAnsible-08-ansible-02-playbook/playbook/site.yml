---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      ansible.builtin.command: "/etc/init.d/clickhouse-server start"
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: yes
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Check succses install vector
      ansible.builtin.shell: "vector --version"
      register: out
      tags: vector
    - name: debug details
      debug:
        msg: "{{ out.stdout }}"
  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/vector-{{ vector_version }}.tar.gz"
      tags: vector
    - name: Create directory for Vector
      file:
        state: directory
        path: "{{ vector_home }}"
      tags: vector
    - name: extractor presents
      ansible.builtin.yum:
        name:
          - unzip
          - tar
        state: present
      tags: vector
    - name: Extract vector in directory
      ansible.builtin.unarchive:
        src: "/vector-{{ vector_version }}.tar.gz"
        dest: "{{ vector_home }}"
        extra_opts: [ --strip-components=2 ]
        remote_src: yes
      tags: vector
    - name: Create a symbolic link
      ansible.builtin.file:
        src: "{{ vector_home }}/bin/vector"
        dest: "/usr/bin/vector"
        owner: root
        group: root
        state: link
      tags: vector
      notify:
        - Check succses install vector
        - debug details